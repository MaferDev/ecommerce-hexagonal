generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id           String         @id @default(uuid())
  name         String
  description  String
  price        Float
  stock        Int
  slug         String         @unique
  status       ProductStatus  @default(ACTIVE)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  ProductImage ProductImage[]
  OrderItem    OrderItem[]
}

model ProductImage {
  id          String   @id @default(uuid())
  productId   String
  imageUrl    String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String
  isMain      Boolean
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id          String      @id @default(uuid())
  userName    String
  userPhone   String      @db.VarChar(20)
  userAddress String?
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  price     Int
  quantity  Int
  subtotal  Int
  createdAt DateTime @default(now())

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}

enum ProductStatus {
  ACTIVE
  INACTIVE
}

enum OrderStatus {
  PENDING
  NOTIFIED
  CANCELED
  COMPLETED
}
